{"version":3,"sources":["../node_modules/react-router-dom/es/Link.js","../node_modules/date-fns/parse/index.js","../node_modules/date-fns/compare_asc/index.js","../node_modules/date-fns/locale/ru/index.js","../node_modules/date-fns/format/index.js","../node_modules/date-fns/is_date/index.js","../node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds/index.js","../node_modules/date-fns/start_of_iso_week/index.js","../node_modules/date-fns/locale/en/index.js","../node_modules/date-fns/get_iso_year/index.js","../node_modules/date-fns/locale/_lib/build_formatting_tokens_reg_exp/index.js","../node_modules/date-fns/get_day_of_year/index.js","../node_modules/date-fns/start_of_year/index.js","../node_modules/date-fns/difference_in_calendar_days/index.js","../node_modules/date-fns/start_of_day/index.js","../node_modules/date-fns/get_iso_week/index.js","../node_modules/date-fns/start_of_week/index.js","../node_modules/date-fns/start_of_iso_year/index.js","../node_modules/date-fns/is_valid/index.js","../node_modules/date-fns/locale/en/build_distance_in_words_locale/index.js","../node_modules/date-fns/locale/en/build_format_locale/index.js","../node_modules/date-fns/locale/ru/build_distance_in_words_locale/index.js","../node_modules/date-fns/locale/ru/build_format_locale/index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","invariant__WEBPACK_IMPORTED_MODULE_2__","invariant__WEBPACK_IMPORTED_MODULE_2___default","history__WEBPACK_IMPORTED_MODULE_3__","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_possibleConstructorReturn","self","ReferenceError","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","Link","_React$Component","_temp","_this","instance","Constructor","TypeError","_classCallCheck","this","_len","args","Array","_key","apply","concat","handleClick","props","onClick","defaultPrevented","button","preventDefault","history","context","router","_this$props","replace","to","push","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_inherits","render","_props","innerRef","obj","keys","indexOf","_objectWithoutProperties","undefined","location","href","createHref","a","createElement","ref","Component","propTypes","func","string","bool","oneOfType","object","isRequired","defaultProps","contextTypes","shape","__webpack_exports__","getTimezoneOffsetInMilliseconds","isDate","MILLISECONDS_IN_HOUR","MILLISECONDS_IN_MINUTE","DEFAULT_ADDITIONAL_DIGITS","parseTokenDateTimeDelimeter","parseTokenPlainTime","parseTokenYY","parseTokensYYY","parseTokenYYYY","parseTokensYYYYY","parseTokenMM","parseTokenDDD","parseTokenMMDD","parseTokenWww","parseTokenWwwD","parseTokenHH","parseTokenHHMM","parseTokenHHMMSS","parseTokenTimezone","parseTokenTimezoneZ","parseTokenTimezoneHH","parseTokenTimezoneHHMM","dayOfISOYear","isoYear","week","day","date","Date","setUTCFullYear","diff","getUTCDay","setUTCDate","getUTCDate","module","exports","argument","dirtyOptions","getTime","additionalDigits","Number","dateStrings","dateString","timeString","array","split","test","token","exec","time","timezone","splitDateString","parseYearResult","parseTokenYYY","parseTokenYYYYY","yearString","year","parseInt","restDateString","slice","centuryString","parseYear","month","dayOfYear","dayOfWeek","parseDate","offset","timestamp","hours","minutes","parseFloat","seconds","parseTime","timezoneString","absoluteOffset","parseTimezone","fullTime","fullTimeDate","fullTimeDateNextDay","setDate","getDate","offsetDiff","parse","dirtyDateLeft","dirtyDateRight","timeLeft","timeRight","buildDistanceInWordsLocale","buildFormatLocale","distanceInWords","format","getDayOfYear","getISOWeek","getISOYear","isValid","enLocale","formatters","M","getMonth","MM","addLeadingZeros","Q","Math","ceil","D","DD","DDD","DDDD","d","getDay","E","W","WW","YY","getFullYear","substr","YYYY","GG","String","GGGG","H","getHours","HH","h","hh","m","getMinutes","mm","s","getSeconds","ss","S","floor","getMilliseconds","SS","SSS","Z","formatTimezone","getTimezoneOffset","ZZ","X","x","delimeter","sign","absOffset","abs","number","targetLength","output","toString","dirtyDate","dirtyFormatStr","formatStr","locale","localeFormatters","formattingTokensRegExp","formatter","input","match","Function","buildFormatFn","formatFn","baseTimezoneOffset","setSeconds","startOfWeek","weekStartsOn","startOfISOWeek","fourthOfJanuaryOfNextYear","setFullYear","setHours","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","commonFormatterKeys","formatterKeys","formattingTokens","sort","reverse","RegExp","join","startOfYear","differenceInCalendarDays","cleanDate","startOfDay","MILLISECONDS_IN_DAY","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","round","startOfISOYear","MILLISECONDS_IN_WEEK","fourthOfJanuary","isNaN","distanceInWordsLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","localize","count","options","result","addSuffix","comparison","buildFormattingTokensRegExp","months3char","monthsFull","weekdays2char","weekdays3char","weekdaysFull","meridiemUppercase","meridiemLowercase","meridiemFull","MMM","MMMM","dd","ddd","dddd","A","aa","forEach","formatterToken","rem100","ordinal","declension","scheme","rem10","singularNominative","singularGenitive","pluralGenitive","buildLocalizeTokenFn","future","regular","past","_","monthsShort","monthsGenitive","meridiem","Do","Wo","commonFormatters"],"mappings":"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","file":"static/js/2.d5bf7c5b.chunk.js","sourcesContent":["var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"invariant\";\nimport { createLocation } from \"history\";\n\nvar isModifiedEvent = function isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n};\n/**\n * The public API for rendering a history-aware <a>.\n */\n\n\nvar Link = function (_React$Component) {\n  _inherits(Link, _React$Component);\n\n  function Link() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Link);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function (event) {\n      if (_this.props.onClick) _this.props.onClick(event);\n\n      if (!event.defaultPrevented && // onClick prevented default\n      event.button === 0 && // ignore everything but left clicks\n      !_this.props.target && // let browser handle \"target=_blank\" etc.\n      !isModifiedEvent(event) // ignore clicks with modifier keys\n      ) {\n          event.preventDefault();\n          var history = _this.context.router.history;\n          var _this$props = _this.props,\n              replace = _this$props.replace,\n              to = _this$props.to;\n\n          if (replace) {\n            history.replace(to);\n          } else {\n            history.push(to);\n          }\n        }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Link.prototype.render = function render() {\n    var _props = this.props,\n        replace = _props.replace,\n        to = _props.to,\n        innerRef = _props.innerRef,\n        props = _objectWithoutProperties(_props, [\"replace\", \"to\", \"innerRef\"]); // eslint-disable-line no-unused-vars\n\n\n    invariant(this.context.router, \"You should not use <Link> outside a <Router>\");\n    invariant(to !== undefined, 'You must specify the \"to\" property');\n    var history = this.context.router.history;\n    var location = typeof to === \"string\" ? createLocation(to, null, null, history.location) : to;\n    var href = history.createHref(location);\n    return React.createElement(\"a\", _extends({}, props, {\n      onClick: this.handleClick,\n      href: href,\n      ref: innerRef\n    }));\n  };\n\n  return Link;\n}(React.Component);\n\nLink.propTypes = {\n  onClick: PropTypes.func,\n  target: PropTypes.string,\n  replace: PropTypes.bool,\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  innerRef: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n};\nLink.defaultProps = {\n  replace: false\n};\nLink.contextTypes = {\n  router: PropTypes.shape({\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n      replace: PropTypes.func.isRequired,\n      createHref: PropTypes.func.isRequired\n    }).isRequired\n  }).isRequired\n};\nexport default Link;","var getTimezoneOffsetInMilliseconds = require('../_lib/getTimezoneOffsetInMilliseconds/index.js');\n\nvar isDate = require('../is_date/index.js');\n\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar DEFAULT_ADDITIONAL_DIGITS = 2;\nvar parseTokenDateTimeDelimeter = /[T ]/;\nvar parseTokenPlainTime = /:/; // year tokens\n\nvar parseTokenYY = /^(\\d{2})$/;\nvar parseTokensYYY = [/^([+-]\\d{2})$/, // 0 additional digits\n/^([+-]\\d{3})$/, // 1 additional digit\n/^([+-]\\d{4})$/ // 2 additional digits\n];\nvar parseTokenYYYY = /^(\\d{4})/;\nvar parseTokensYYYYY = [/^([+-]\\d{4})/, // 0 additional digits\n/^([+-]\\d{5})/, // 1 additional digit\n/^([+-]\\d{6})/ // 2 additional digits\n]; // date tokens\n\nvar parseTokenMM = /^-(\\d{2})$/;\nvar parseTokenDDD = /^-?(\\d{3})$/;\nvar parseTokenMMDD = /^-?(\\d{2})-?(\\d{2})$/;\nvar parseTokenWww = /^-?W(\\d{2})$/;\nvar parseTokenWwwD = /^-?W(\\d{2})-?(\\d{1})$/; // time tokens\n\nvar parseTokenHH = /^(\\d{2}([.,]\\d*)?)$/;\nvar parseTokenHHMM = /^(\\d{2}):?(\\d{2}([.,]\\d*)?)$/;\nvar parseTokenHHMMSS = /^(\\d{2}):?(\\d{2}):?(\\d{2}([.,]\\d*)?)$/; // timezone tokens\n\nvar parseTokenTimezone = /([Z+-].*)$/;\nvar parseTokenTimezoneZ = /^(Z)$/;\nvar parseTokenTimezoneHH = /^([+-])(\\d{2})$/;\nvar parseTokenTimezoneHHMM = /^([+-])(\\d{2}):?(\\d{2})$/;\n/**\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If an argument is a string, the function tries to parse it.\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If all above fails, the function passes the given argument to Date constructor.\n *\n * @param {Date|String|Number} argument - the value to convert\n * @param {Object} [options] - the object with options\n * @param {0 | 1 | 2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = parse('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Parse string '+02014101',\n * // if the additional number of digits in the extended year format is 1:\n * var result = parse('+02014101', {additionalDigits: 1})\n * //=> Fri Apr 11 2014 00:00:00\n */\n\nfunction parse(argument, dirtyOptions) {\n  if (isDate(argument)) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument !== 'string') {\n    return new Date(argument);\n  }\n\n  var options = dirtyOptions || {};\n  var additionalDigits = options.additionalDigits;\n\n  if (additionalDigits == null) {\n    additionalDigits = DEFAULT_ADDITIONAL_DIGITS;\n  } else {\n    additionalDigits = Number(additionalDigits);\n  }\n\n  var dateStrings = splitDateString(argument);\n  var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n  var year = parseYearResult.year;\n  var restDateString = parseYearResult.restDateString;\n  var date = parseDate(restDateString, year);\n\n  if (date) {\n    var timestamp = date.getTime();\n    var time = 0;\n    var offset;\n\n    if (dateStrings.time) {\n      time = parseTime(dateStrings.time);\n    }\n\n    if (dateStrings.timezone) {\n      offset = parseTimezone(dateStrings.timezone) * MILLISECONDS_IN_MINUTE;\n    } else {\n      var fullTime = timestamp + time;\n      var fullTimeDate = new Date(fullTime);\n      offset = getTimezoneOffsetInMilliseconds(fullTimeDate); // Adjust time when it's coming from DST\n\n      var fullTimeDateNextDay = new Date(fullTime);\n      fullTimeDateNextDay.setDate(fullTimeDate.getDate() + 1);\n      var offsetDiff = getTimezoneOffsetInMilliseconds(fullTimeDateNextDay) - getTimezoneOffsetInMilliseconds(fullTimeDate);\n\n      if (offsetDiff > 0) {\n        offset += offsetDiff;\n      }\n    }\n\n    return new Date(timestamp + time + offset);\n  } else {\n    return new Date(argument);\n  }\n}\n\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(parseTokenDateTimeDelimeter);\n  var timeString;\n\n  if (parseTokenPlainTime.test(array[0])) {\n    dateStrings.date = null;\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n  }\n\n  if (timeString) {\n    var token = parseTokenTimezone.exec(timeString);\n\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  var parseTokenYYY = parseTokensYYY[additionalDigits];\n  var parseTokenYYYYY = parseTokensYYYYY[additionalDigits];\n  var token; // YYYY or ±YYYYY\n\n  token = parseTokenYYYY.exec(dateString) || parseTokenYYYYY.exec(dateString);\n\n  if (token) {\n    var yearString = token[1];\n    return {\n      year: parseInt(yearString, 10),\n      restDateString: dateString.slice(yearString.length)\n    };\n  } // YY or ±YYY\n\n\n  token = parseTokenYY.exec(dateString) || parseTokenYYY.exec(dateString);\n\n  if (token) {\n    var centuryString = token[1];\n    return {\n      year: parseInt(centuryString, 10) * 100,\n      restDateString: dateString.slice(centuryString.length)\n    };\n  } // Invalid ISO-formatted year\n\n\n  return {\n    year: null\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) {\n    return null;\n  }\n\n  var token;\n  var date;\n  var month;\n  var week; // YYYY\n\n  if (dateString.length === 0) {\n    date = new Date(0);\n    date.setUTCFullYear(year);\n    return date;\n  } // YYYY-MM\n\n\n  token = parseTokenMM.exec(dateString);\n\n  if (token) {\n    date = new Date(0);\n    month = parseInt(token[1], 10) - 1;\n    date.setUTCFullYear(year, month);\n    return date;\n  } // YYYY-DDD or YYYYDDD\n\n\n  token = parseTokenDDD.exec(dateString);\n\n  if (token) {\n    date = new Date(0);\n    var dayOfYear = parseInt(token[1], 10);\n    date.setUTCFullYear(year, 0, dayOfYear);\n    return date;\n  } // YYYY-MM-DD or YYYYMMDD\n\n\n  token = parseTokenMMDD.exec(dateString);\n\n  if (token) {\n    date = new Date(0);\n    month = parseInt(token[1], 10) - 1;\n    var day = parseInt(token[2], 10);\n    date.setUTCFullYear(year, month, day);\n    return date;\n  } // YYYY-Www or YYYYWww\n\n\n  token = parseTokenWww.exec(dateString);\n\n  if (token) {\n    week = parseInt(token[1], 10) - 1;\n    return dayOfISOYear(year, week);\n  } // YYYY-Www-D or YYYYWwwD\n\n\n  token = parseTokenWwwD.exec(dateString);\n\n  if (token) {\n    week = parseInt(token[1], 10) - 1;\n    var dayOfWeek = parseInt(token[2], 10) - 1;\n    return dayOfISOYear(year, week, dayOfWeek);\n  } // Invalid ISO-formatted date\n\n\n  return null;\n}\n\nfunction parseTime(timeString) {\n  var token;\n  var hours;\n  var minutes; // hh\n\n  token = parseTokenHH.exec(timeString);\n\n  if (token) {\n    hours = parseFloat(token[1].replace(',', '.'));\n    return hours % 24 * MILLISECONDS_IN_HOUR;\n  } // hh:mm or hhmm\n\n\n  token = parseTokenHHMM.exec(timeString);\n\n  if (token) {\n    hours = parseInt(token[1], 10);\n    minutes = parseFloat(token[2].replace(',', '.'));\n    return hours % 24 * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE;\n  } // hh:mm:ss or hhmmss\n\n\n  token = parseTokenHHMMSS.exec(timeString);\n\n  if (token) {\n    hours = parseInt(token[1], 10);\n    minutes = parseInt(token[2], 10);\n    var seconds = parseFloat(token[3].replace(',', '.'));\n    return hours % 24 * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * 1000;\n  } // Invalid ISO-formatted time\n\n\n  return null;\n}\n\nfunction parseTimezone(timezoneString) {\n  var token;\n  var absoluteOffset; // Z\n\n  token = parseTokenTimezoneZ.exec(timezoneString);\n\n  if (token) {\n    return 0;\n  } // ±hh\n\n\n  token = parseTokenTimezoneHH.exec(timezoneString);\n\n  if (token) {\n    absoluteOffset = parseInt(token[2], 10) * 60;\n    return token[1] === '+' ? -absoluteOffset : absoluteOffset;\n  } // ±hh:mm or ±hhmm\n\n\n  token = parseTokenTimezoneHHMM.exec(timezoneString);\n\n  if (token) {\n    absoluteOffset = parseInt(token[2], 10) * 60 + parseInt(token[3], 10);\n    return token[1] === '+' ? -absoluteOffset : absoluteOffset;\n  }\n\n  return 0;\n}\n\nfunction dayOfISOYear(isoYear, week, day) {\n  week = week || 0;\n  day = day || 0;\n  var date = new Date(0);\n  date.setUTCFullYear(isoYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = week * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\n\nmodule.exports = parse;","var parse = require('../parse/index.js');\n/**\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @param {Date|String|Number} dateLeft - the first date to compare\n * @param {Date|String|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * var result = compareAsc(\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * )\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * var result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\n\n\nfunction compareAsc(dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft);\n  var timeLeft = dateLeft.getTime();\n  var dateRight = parse(dirtyDateRight);\n  var timeRight = dateRight.getTime();\n\n  if (timeLeft < timeRight) {\n    return -1;\n  } else if (timeLeft > timeRight) {\n    return 1;\n  } else {\n    return 0;\n  }\n}\n\nmodule.exports = compareAsc;","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js');\n\nvar buildFormatLocale = require('./build_format_locale/index.js');\n/**\n * @category Locales\n * @summary Russian locale.\n */\n\n\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n};","var getDayOfYear = require('../get_day_of_year/index.js');\n\nvar getISOWeek = require('../get_iso_week/index.js');\n\nvar getISOYear = require('../get_iso_year/index.js');\n\nvar parse = require('../parse/index.js');\n\nvar isValid = require('../is_valid/index.js');\n\nvar enLocale = require('../locale/en/index.js');\n/**\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format.\n *\n * Accepted tokens:\n * | Unit                    | Token | Result examples                  |\n * |-------------------------|-------|----------------------------------|\n * | Month                   | M     | 1, 2, ..., 12                    |\n * |                         | Mo    | 1st, 2nd, ..., 12th              |\n * |                         | MM    | 01, 02, ..., 12                  |\n * |                         | MMM   | Jan, Feb, ..., Dec               |\n * |                         | MMMM  | January, February, ..., December |\n * | Quarter                 | Q     | 1, 2, 3, 4                       |\n * |                         | Qo    | 1st, 2nd, 3rd, 4th               |\n * | Day of month            | D     | 1, 2, ..., 31                    |\n * |                         | Do    | 1st, 2nd, ..., 31st              |\n * |                         | DD    | 01, 02, ..., 31                  |\n * | Day of year             | DDD   | 1, 2, ..., 366                   |\n * |                         | DDDo  | 1st, 2nd, ..., 366th             |\n * |                         | DDDD  | 001, 002, ..., 366               |\n * | Day of week             | d     | 0, 1, ..., 6                     |\n * |                         | do    | 0th, 1st, ..., 6th               |\n * |                         | dd    | Su, Mo, ..., Sa                  |\n * |                         | ddd   | Sun, Mon, ..., Sat               |\n * |                         | dddd  | Sunday, Monday, ..., Saturday    |\n * | Day of ISO week         | E     | 1, 2, ..., 7                     |\n * | ISO week                | W     | 1, 2, ..., 53                    |\n * |                         | Wo    | 1st, 2nd, ..., 53rd              |\n * |                         | WW    | 01, 02, ..., 53                  |\n * | Year                    | YY    | 00, 01, ..., 99                  |\n * |                         | YYYY  | 1900, 1901, ..., 2099            |\n * | ISO week-numbering year | GG    | 00, 01, ..., 99                  |\n * |                         | GGGG  | 1900, 1901, ..., 2099            |\n * | AM/PM                   | A     | AM, PM                           |\n * |                         | a     | am, pm                           |\n * |                         | aa    | a.m., p.m.                       |\n * | Hour                    | H     | 0, 1, ... 23                     |\n * |                         | HH    | 00, 01, ... 23                   |\n * |                         | h     | 1, 2, ..., 12                    |\n * |                         | hh    | 01, 02, ..., 12                  |\n * | Minute                  | m     | 0, 1, ..., 59                    |\n * |                         | mm    | 00, 01, ..., 59                  |\n * | Second                  | s     | 0, 1, ..., 59                    |\n * |                         | ss    | 00, 01, ..., 59                  |\n * | 1/10 of second          | S     | 0, 1, ..., 9                     |\n * | 1/100 of second         | SS    | 00, 01, ..., 99                  |\n * | Millisecond             | SSS   | 000, 001, ..., 999               |\n * | Timezone                | Z     | -01:00, +00:00, ... +12:00       |\n * |                         | ZZ    | -0100, +0000, ..., +1200         |\n * | Seconds timestamp       | X     | 512969520                        |\n * | Milliseconds timestamp  | x     | 512969520900                     |\n *\n * The characters wrapped in square brackets are escaped.\n *\n * The result may vary by locale.\n *\n * @param {Date|String|Number} date - the original date\n * @param {String} [format='YYYY-MM-DDTHH:mm:ss.SSSZ'] - the string of tokens\n * @param {Object} [options] - the object with options\n * @param {Object} [options.locale=enLocale] - the locale object\n * @returns {String} the formatted date string\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(\n *   new Date(2014, 1, 11),\n *   'MM/DD/YYYY'\n * )\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * var eoLocale = require('date-fns/locale/eo')\n * var result = format(\n *   new Date(2014, 6, 2),\n *   'Do [de] MMMM YYYY',\n *   {locale: eoLocale}\n * )\n * //=> '2-a de julio 2014'\n */\n\n\nfunction format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  var formatStr = dirtyFormatStr ? String(dirtyFormatStr) : 'YYYY-MM-DDTHH:mm:ss.SSSZ';\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFormatters = enLocale.format.formatters;\n  var formattingTokensRegExp = enLocale.format.formattingTokensRegExp;\n\n  if (locale && locale.format && locale.format.formatters) {\n    localeFormatters = locale.format.formatters;\n\n    if (locale.format.formattingTokensRegExp) {\n      formattingTokensRegExp = locale.format.formattingTokensRegExp;\n    }\n  }\n\n  var date = parse(dirtyDate);\n\n  if (!isValid(date)) {\n    return 'Invalid Date';\n  }\n\n  var formatFn = buildFormatFn(formatStr, localeFormatters, formattingTokensRegExp);\n  return formatFn(date);\n}\n\nvar formatters = {\n  // Month: 1, 2, ..., 12\n  'M': function M(date) {\n    return date.getMonth() + 1;\n  },\n  // Month: 01, 02, ..., 12\n  'MM': function MM(date) {\n    return addLeadingZeros(date.getMonth() + 1, 2);\n  },\n  // Quarter: 1, 2, 3, 4\n  'Q': function Q(date) {\n    return Math.ceil((date.getMonth() + 1) / 3);\n  },\n  // Day of month: 1, 2, ..., 31\n  'D': function D(date) {\n    return date.getDate();\n  },\n  // Day of month: 01, 02, ..., 31\n  'DD': function DD(date) {\n    return addLeadingZeros(date.getDate(), 2);\n  },\n  // Day of year: 1, 2, ..., 366\n  'DDD': function DDD(date) {\n    return getDayOfYear(date);\n  },\n  // Day of year: 001, 002, ..., 366\n  'DDDD': function DDDD(date) {\n    return addLeadingZeros(getDayOfYear(date), 3);\n  },\n  // Day of week: 0, 1, ..., 6\n  'd': function d(date) {\n    return date.getDay();\n  },\n  // Day of ISO week: 1, 2, ..., 7\n  'E': function E(date) {\n    return date.getDay() || 7;\n  },\n  // ISO week: 1, 2, ..., 53\n  'W': function W(date) {\n    return getISOWeek(date);\n  },\n  // ISO week: 01, 02, ..., 53\n  'WW': function WW(date) {\n    return addLeadingZeros(getISOWeek(date), 2);\n  },\n  // Year: 00, 01, ..., 99\n  'YY': function YY(date) {\n    return addLeadingZeros(date.getFullYear(), 4).substr(2);\n  },\n  // Year: 1900, 1901, ..., 2099\n  'YYYY': function YYYY(date) {\n    return addLeadingZeros(date.getFullYear(), 4);\n  },\n  // ISO week-numbering year: 00, 01, ..., 99\n  'GG': function GG(date) {\n    return String(getISOYear(date)).substr(2);\n  },\n  // ISO week-numbering year: 1900, 1901, ..., 2099\n  'GGGG': function GGGG(date) {\n    return getISOYear(date);\n  },\n  // Hour: 0, 1, ... 23\n  'H': function H(date) {\n    return date.getHours();\n  },\n  // Hour: 00, 01, ..., 23\n  'HH': function HH(date) {\n    return addLeadingZeros(date.getHours(), 2);\n  },\n  // Hour: 1, 2, ..., 12\n  'h': function h(date) {\n    var hours = date.getHours();\n\n    if (hours === 0) {\n      return 12;\n    } else if (hours > 12) {\n      return hours % 12;\n    } else {\n      return hours;\n    }\n  },\n  // Hour: 01, 02, ..., 12\n  'hh': function hh(date) {\n    return addLeadingZeros(formatters['h'](date), 2);\n  },\n  // Minute: 0, 1, ..., 59\n  'm': function m(date) {\n    return date.getMinutes();\n  },\n  // Minute: 00, 01, ..., 59\n  'mm': function mm(date) {\n    return addLeadingZeros(date.getMinutes(), 2);\n  },\n  // Second: 0, 1, ..., 59\n  's': function s(date) {\n    return date.getSeconds();\n  },\n  // Second: 00, 01, ..., 59\n  'ss': function ss(date) {\n    return addLeadingZeros(date.getSeconds(), 2);\n  },\n  // 1/10 of second: 0, 1, ..., 9\n  'S': function S(date) {\n    return Math.floor(date.getMilliseconds() / 100);\n  },\n  // 1/100 of second: 00, 01, ..., 99\n  'SS': function SS(date) {\n    return addLeadingZeros(Math.floor(date.getMilliseconds() / 10), 2);\n  },\n  // Millisecond: 000, 001, ..., 999\n  'SSS': function SSS(date) {\n    return addLeadingZeros(date.getMilliseconds(), 3);\n  },\n  // Timezone: -01:00, +00:00, ... +12:00\n  'Z': function Z(date) {\n    return formatTimezone(date.getTimezoneOffset(), ':');\n  },\n  // Timezone: -0100, +0000, ... +1200\n  'ZZ': function ZZ(date) {\n    return formatTimezone(date.getTimezoneOffset());\n  },\n  // Seconds timestamp: 512969520\n  'X': function X(date) {\n    return Math.floor(date.getTime() / 1000);\n  },\n  // Milliseconds timestamp: 512969520900\n  'x': function x(date) {\n    return date.getTime();\n  }\n};\n\nfunction buildFormatFn(formatStr, localeFormatters, formattingTokensRegExp) {\n  var array = formatStr.match(formattingTokensRegExp);\n  var length = array.length;\n  var i;\n  var formatter;\n\n  for (i = 0; i < length; i++) {\n    formatter = localeFormatters[array[i]] || formatters[array[i]];\n\n    if (formatter) {\n      array[i] = formatter;\n    } else {\n      array[i] = removeFormattingTokens(array[i]);\n    }\n  }\n\n  return function (date) {\n    var output = '';\n\n    for (var i = 0; i < length; i++) {\n      if (array[i] instanceof Function) {\n        output += array[i](date, formatters);\n      } else {\n        output += array[i];\n      }\n    }\n\n    return output;\n  };\n}\n\nfunction removeFormattingTokens(input) {\n  if (input.match(/\\[[\\s\\S]/)) {\n    return input.replace(/^\\[|]$/g, '');\n  }\n\n  return input.replace(/\\\\/g, '');\n}\n\nfunction formatTimezone(offset, delimeter) {\n  delimeter = delimeter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n  return sign + addLeadingZeros(hours, 2) + delimeter + addLeadingZeros(minutes, 2);\n}\n\nfunction addLeadingZeros(number, targetLength) {\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return output;\n}\n\nmodule.exports = format;","/**\n * @category Common Helpers\n * @summary Is the given argument an instance of Date?\n *\n * @description\n * Is the given argument an instance of Date?\n *\n * @param {*} argument - the argument to check\n * @returns {Boolean} the given argument is an instance of Date\n *\n * @example\n * // Is 'mayonnaise' a Date?\n * var result = isDate('mayonnaise')\n * //=> false\n */\nfunction isDate(argument) {\n  return argument instanceof Date;\n}\n\nmodule.exports = isDate;","var MILLISECONDS_IN_MINUTE = 60000;\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\n\nmodule.exports = function getTimezoneOffsetInMilliseconds(dirtyDate) {\n  var date = new Date(dirtyDate.getTime());\n  var baseTimezoneOffset = date.getTimezoneOffset();\n  date.setSeconds(0, 0);\n  var millisecondsPartOfTimezoneOffset = date.getTime() % MILLISECONDS_IN_MINUTE;\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;\n};","var startOfWeek = require('../start_of_week/index.js');\n/**\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * var result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\n\n\nfunction startOfISOWeek(dirtyDate) {\n  return startOfWeek(dirtyDate, {\n    weekStartsOn: 1\n  });\n}\n\nmodule.exports = startOfISOWeek;","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js');\n\nvar buildFormatLocale = require('./build_format_locale/index.js');\n/**\n * @category Locales\n * @summary English locale.\n */\n\n\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n};","var parse = require('../parse/index.js');\n\nvar startOfISOWeek = require('../start_of_iso_week/index.js');\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * var result = getISOYear(new Date(2005, 0, 2))\n * //=> 2004\n */\n\n\nfunction getISOYear(dirtyDate) {\n  var date = parse(dirtyDate);\n  var year = date.getFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  var startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  var startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\nmodule.exports = getISOYear;","var commonFormatterKeys = ['M', 'MM', 'Q', 'D', 'DD', 'DDD', 'DDDD', 'd', 'E', 'W', 'WW', 'YY', 'YYYY', 'GG', 'GGGG', 'H', 'HH', 'h', 'hh', 'm', 'mm', 's', 'ss', 'S', 'SS', 'SSS', 'Z', 'ZZ', 'X', 'x'];\n\nfunction buildFormattingTokensRegExp(formatters) {\n  var formatterKeys = [];\n\n  for (var key in formatters) {\n    if (formatters.hasOwnProperty(key)) {\n      formatterKeys.push(key);\n    }\n  }\n\n  var formattingTokens = commonFormatterKeys.concat(formatterKeys).sort().reverse();\n  var formattingTokensRegExp = new RegExp('(\\\\[[^\\\\[]*\\\\])|(\\\\\\\\)?' + '(' + formattingTokens.join('|') + '|.)', 'g');\n  return formattingTokensRegExp;\n}\n\nmodule.exports = buildFormattingTokensRegExp;","var parse = require('../parse/index.js');\n\nvar startOfYear = require('../start_of_year/index.js');\n\nvar differenceInCalendarDays = require('../difference_in_calendar_days/index.js');\n/**\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * var result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\n\n\nfunction getDayOfYear(dirtyDate) {\n  var date = parse(dirtyDate);\n  var diff = differenceInCalendarDays(date, startOfYear(date));\n  var dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\nmodule.exports = getDayOfYear;","var parse = require('../parse/index.js');\n/**\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * var result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\n\n\nfunction startOfYear(dirtyDate) {\n  var cleanDate = parse(dirtyDate);\n  var date = new Date(0);\n  date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}\n\nmodule.exports = startOfYear;","var startOfDay = require('../start_of_day/index.js');\n\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_DAY = 86400000;\n/**\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n */\n\nfunction differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\n  var startOfDayLeft = startOfDay(dirtyDateLeft);\n  var startOfDayRight = startOfDay(dirtyDateRight);\n  var timestampLeft = startOfDayLeft.getTime() - startOfDayLeft.getTimezoneOffset() * MILLISECONDS_IN_MINUTE;\n  var timestampRight = startOfDayRight.getTime() - startOfDayRight.getTimezoneOffset() * MILLISECONDS_IN_MINUTE; // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n}\n\nmodule.exports = differenceInCalendarDays;","var parse = require('../parse/index.js');\n/**\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\n\nfunction startOfDay(dirtyDate) {\n  var date = parse(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}\n\nmodule.exports = startOfDay;","var parse = require('../parse/index.js');\n\nvar startOfISOWeek = require('../start_of_iso_week/index.js');\n\nvar startOfISOYear = require('../start_of_iso_year/index.js');\n\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * var result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\n\nfunction getISOWeek(dirtyDate) {\n  var date = parse(dirtyDate);\n  var diff = startOfISOWeek(date).getTime() - startOfISOYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}\n\nmodule.exports = getISOWeek;","var parse = require('../parse/index.js');\n/**\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), {weekStartsOn: 1})\n * //=> Mon Sep 01 2014 00:00:00\n */\n\n\nfunction startOfWeek(dirtyDate, dirtyOptions) {\n  var weekStartsOn = dirtyOptions ? Number(dirtyOptions.weekStartsOn) || 0 : 0;\n  var date = parse(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}\n\nmodule.exports = startOfWeek;","var getISOYear = require('../get_iso_year/index.js');\n\nvar startOfISOWeek = require('../start_of_iso_week/index.js');\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of an ISO year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * var result = startOfISOYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\n\n\nfunction startOfISOYear(dirtyDate) {\n  var year = getISOYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  var date = startOfISOWeek(fourthOfJanuary);\n  return date;\n}\n\nmodule.exports = startOfISOYear;","var isDate = require('../is_date/index.js');\n/**\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param {Date} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} argument must be an instance of Date\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\n\n\nfunction isValid(dirtyDate) {\n  if (isDate(dirtyDate)) {\n    return !isNaN(dirtyDate);\n  } else {\n    throw new TypeError(toString.call(dirtyDate) + ' is not an instance of Date');\n  }\n}\n\nmodule.exports = isValid;","function buildDistanceInWordsLocale() {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'less than a second',\n      other: 'less than {{count}} seconds'\n    },\n    xSeconds: {\n      one: '1 second',\n      other: '{{count}} seconds'\n    },\n    halfAMinute: 'half a minute',\n    lessThanXMinutes: {\n      one: 'less than a minute',\n      other: 'less than {{count}} minutes'\n    },\n    xMinutes: {\n      one: '1 minute',\n      other: '{{count}} minutes'\n    },\n    aboutXHours: {\n      one: 'about 1 hour',\n      other: 'about {{count}} hours'\n    },\n    xHours: {\n      one: '1 hour',\n      other: '{{count}} hours'\n    },\n    xDays: {\n      one: '1 day',\n      other: '{{count}} days'\n    },\n    aboutXMonths: {\n      one: 'about 1 month',\n      other: 'about {{count}} months'\n    },\n    xMonths: {\n      one: '1 month',\n      other: '{{count}} months'\n    },\n    aboutXYears: {\n      one: 'about 1 year',\n      other: 'about {{count}} years'\n    },\n    xYears: {\n      one: '1 year',\n      other: '{{count}} years'\n    },\n    overXYears: {\n      one: 'over 1 year',\n      other: 'over {{count}} years'\n    },\n    almostXYears: {\n      one: 'almost 1 year',\n      other: 'almost {{count}} years'\n    }\n  };\n\n  function localize(token, count, options) {\n    options = options || {};\n    var result;\n\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token];\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one;\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count);\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'in ' + result;\n      } else {\n        return result + ' ago';\n      }\n    }\n\n    return result;\n  }\n\n  return {\n    localize: localize\n  };\n}\n\nmodule.exports = buildDistanceInWordsLocale;","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js');\n\nfunction buildFormatLocale() {\n  // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n  var months3char = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  var monthsFull = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  var weekdays2char = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];\n  var weekdays3char = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  var weekdaysFull = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  var meridiemUppercase = ['AM', 'PM'];\n  var meridiemLowercase = ['am', 'pm'];\n  var meridiemFull = ['a.m.', 'p.m.'];\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function MMM(date) {\n      return months3char[date.getMonth()];\n    },\n    // Month: January, February, ..., December\n    'MMMM': function MMMM(date) {\n      return monthsFull[date.getMonth()];\n    },\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function dd(date) {\n      return weekdays2char[date.getDay()];\n    },\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function ddd(date) {\n      return weekdays3char[date.getDay()];\n    },\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function dddd(date) {\n      return weekdaysFull[date.getDay()];\n    },\n    // AM, PM\n    'A': function A(date) {\n      return date.getHours() / 12 >= 1 ? meridiemUppercase[1] : meridiemUppercase[0];\n    },\n    // am, pm\n    'a': function a(date) {\n      return date.getHours() / 12 >= 1 ? meridiemLowercase[1] : meridiemLowercase[0];\n    },\n    // a.m., p.m.\n    'aa': function aa(date) {\n      return date.getHours() / 12 >= 1 ? meridiemFull[1] : meridiemFull[0];\n    } // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n\n  };\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W'];\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date));\n    };\n  });\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  };\n}\n\nfunction ordinal(number) {\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n}\n\nmodule.exports = buildFormatLocale;","function declension(scheme, count) {\n  // scheme for count=1 exists\n  if (scheme.one !== undefined && count === 1) {\n    return scheme.one;\n  }\n\n  var rem10 = count % 10;\n  var rem100 = count % 100; // 1, 21, 31, ...\n\n  if (rem10 === 1 && rem100 !== 11) {\n    return scheme.singularNominative.replace('{{count}}', count); // 2, 3, 4, 22, 23, 24, 32 ...\n  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {\n    return scheme.singularGenitive.replace('{{count}}', count); // 5, 6, 7, 8, 9, 10, 11, ...\n  } else {\n    return scheme.pluralGenitive.replace('{{count}}', count);\n  }\n}\n\nfunction buildLocalizeTokenFn(scheme) {\n  return function (count, options) {\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        if (scheme.future) {\n          return declension(scheme.future, count);\n        } else {\n          return 'через ' + declension(scheme.regular, count);\n        }\n      } else {\n        if (scheme.past) {\n          return declension(scheme.past, count);\n        } else {\n          return declension(scheme.regular, count) + ' назад';\n        }\n      }\n    } else {\n      return declension(scheme.regular, count);\n    }\n  };\n}\n\nfunction buildDistanceInWordsLocale() {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: buildLocalizeTokenFn({\n      regular: {\n        one: 'меньше секунды',\n        singularNominative: 'меньше {{count}} секунды',\n        singularGenitive: 'меньше {{count}} секунд',\n        pluralGenitive: 'меньше {{count}} секунд'\n      },\n      future: {\n        one: 'меньше, чем через секунду',\n        singularNominative: 'меньше, чем через {{count}} секунду',\n        singularGenitive: 'меньше, чем через {{count}} секунды',\n        pluralGenitive: 'меньше, чем через {{count}} секунд'\n      }\n    }),\n    xSeconds: buildLocalizeTokenFn({\n      regular: {\n        singularNominative: '{{count}} секунда',\n        singularGenitive: '{{count}} секунды',\n        pluralGenitive: '{{count}} секунд'\n      },\n      past: {\n        singularNominative: '{{count}} секунду назад',\n        singularGenitive: '{{count}} секунды назад',\n        pluralGenitive: '{{count}} секунд назад'\n      },\n      future: {\n        singularNominative: 'через {{count}} секунду',\n        singularGenitive: 'через {{count}} секунды',\n        pluralGenitive: 'через {{count}} секунд'\n      }\n    }),\n    halfAMinute: function halfAMinute(_, options) {\n      if (options.addSuffix) {\n        if (options.comparison > 0) {\n          return 'через полминуты';\n        } else {\n          return 'полминуты назад';\n        }\n      }\n\n      return 'полминуты';\n    },\n    lessThanXMinutes: buildLocalizeTokenFn({\n      regular: {\n        one: 'меньше минуты',\n        singularNominative: 'меньше {{count}} минуты',\n        singularGenitive: 'меньше {{count}} минут',\n        pluralGenitive: 'меньше {{count}} минут'\n      },\n      future: {\n        one: 'меньше, чем через минуту',\n        singularNominative: 'меньше, чем через {{count}} минуту',\n        singularGenitive: 'меньше, чем через {{count}} минуты',\n        pluralGenitive: 'меньше, чем через {{count}} минут'\n      }\n    }),\n    xMinutes: buildLocalizeTokenFn({\n      regular: {\n        singularNominative: '{{count}} минута',\n        singularGenitive: '{{count}} минуты',\n        pluralGenitive: '{{count}} минут'\n      },\n      past: {\n        singularNominative: '{{count}} минуту назад',\n        singularGenitive: '{{count}} минуты назад',\n        pluralGenitive: '{{count}} минут назад'\n      },\n      future: {\n        singularNominative: 'через {{count}} минуту',\n        singularGenitive: 'через {{count}} минуты',\n        pluralGenitive: 'через {{count}} минут'\n      }\n    }),\n    aboutXHours: buildLocalizeTokenFn({\n      regular: {\n        singularNominative: 'около {{count}} часа',\n        singularGenitive: 'около {{count}} часов',\n        pluralGenitive: 'около {{count}} часов'\n      },\n      future: {\n        singularNominative: 'приблизительно через {{count}} час',\n        singularGenitive: 'приблизительно через {{count}} часа',\n        pluralGenitive: 'приблизительно через {{count}} часов'\n      }\n    }),\n    xHours: buildLocalizeTokenFn({\n      regular: {\n        singularNominative: '{{count}} час',\n        singularGenitive: '{{count}} часа',\n        pluralGenitive: '{{count}} часов'\n      }\n    }),\n    xDays: buildLocalizeTokenFn({\n      regular: {\n        singularNominative: '{{count}} день',\n        singularGenitive: '{{count}} дня',\n        pluralGenitive: '{{count}} дней'\n      }\n    }),\n    aboutXMonths: buildLocalizeTokenFn({\n      regular: {\n        singularNominative: 'около {{count}} месяца',\n        singularGenitive: 'около {{count}} месяцев',\n        pluralGenitive: 'около {{count}} месяцев'\n      },\n      future: {\n        singularNominative: 'приблизительно через {{count}} месяц',\n        singularGenitive: 'приблизительно через {{count}} месяца',\n        pluralGenitive: 'приблизительно через {{count}} месяцев'\n      }\n    }),\n    xMonths: buildLocalizeTokenFn({\n      regular: {\n        singularNominative: '{{count}} месяц',\n        singularGenitive: '{{count}} месяца',\n        pluralGenitive: '{{count}} месяцев'\n      }\n    }),\n    aboutXYears: buildLocalizeTokenFn({\n      regular: {\n        singularNominative: 'около {{count}} года',\n        singularGenitive: 'около {{count}} лет',\n        pluralGenitive: 'около {{count}} лет'\n      },\n      future: {\n        singularNominative: 'приблизительно через {{count}} год',\n        singularGenitive: 'приблизительно через {{count}} года',\n        pluralGenitive: 'приблизительно через {{count}} лет'\n      }\n    }),\n    xYears: buildLocalizeTokenFn({\n      regular: {\n        singularNominative: '{{count}} год',\n        singularGenitive: '{{count}} года',\n        pluralGenitive: '{{count}} лет'\n      }\n    }),\n    overXYears: buildLocalizeTokenFn({\n      regular: {\n        singularNominative: 'больше {{count}} года',\n        singularGenitive: 'больше {{count}} лет',\n        pluralGenitive: 'больше {{count}} лет'\n      },\n      future: {\n        singularNominative: 'больше, чем через {{count}} год',\n        singularGenitive: 'больше, чем через {{count}} года',\n        pluralGenitive: 'больше, чем через {{count}} лет'\n      }\n    }),\n    almostXYears: buildLocalizeTokenFn({\n      regular: {\n        singularNominative: 'почти {{count}} год',\n        singularGenitive: 'почти {{count}} года',\n        pluralGenitive: 'почти {{count}} лет'\n      },\n      future: {\n        singularNominative: 'почти через {{count}} год',\n        singularGenitive: 'почти через {{count}} года',\n        pluralGenitive: 'почти через {{count}} лет'\n      }\n    })\n  };\n\n  function localize(token, count, options) {\n    options = options || {};\n    return distanceInWordsLocale[token](count, options);\n  }\n\n  return {\n    localize: localize\n  };\n}\n\nmodule.exports = buildDistanceInWordsLocale;","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js');\n\nfunction buildFormatLocale() {\n  // http://new.gramota.ru/spravka/buro/search-answer?s=242637\n  var monthsShort = ['янв.', 'фев.', 'март', 'апр.', 'май', 'июнь', 'июль', 'авг.', 'сент.', 'окт.', 'нояб.', 'дек.'];\n  var monthsFull = ['январь', 'февраль', 'март', 'апрель', 'май', 'июнь', 'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь'];\n  var monthsGenitive = ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'];\n  var weekdays2char = ['вс', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб'];\n  var weekdays3char = ['вск', 'пнд', 'втр', 'срд', 'чтв', 'птн', 'суб'];\n  var weekdaysFull = ['воскресенье', 'понедельник', 'вторник', 'среда', 'четверг', 'пятница', 'суббота'];\n  var meridiem = ['ночи', 'утра', 'дня', 'вечера'];\n  var formatters = {\n    // Month: янв., фев., ..., дек.\n    'MMM': function MMM(date) {\n      return monthsShort[date.getMonth()];\n    },\n    // Month: январь, февраль, ..., декабрь\n    'MMMM': function MMMM(date) {\n      return monthsFull[date.getMonth()];\n    },\n    // Day of week: вс, пн, ..., сб\n    'dd': function dd(date) {\n      return weekdays2char[date.getDay()];\n    },\n    // Day of week: вск, пнд, ..., суб\n    'ddd': function ddd(date) {\n      return weekdays3char[date.getDay()];\n    },\n    // Day of week: воскресенье, понедельник, ..., суббота\n    'dddd': function dddd(date) {\n      return weekdaysFull[date.getDay()];\n    },\n    // Time of day: ночи, утра, дня, вечера\n    'A': function A(date) {\n      var hours = date.getHours();\n\n      if (hours >= 17) {\n        return meridiem[3];\n      } else if (hours >= 12) {\n        return meridiem[2];\n      } else if (hours >= 4) {\n        return meridiem[1];\n      } else {\n        return meridiem[0];\n      }\n    },\n    'Do': function Do(date, formatters) {\n      return formatters.D(date) + '-е';\n    },\n    'Wo': function Wo(date, formatters) {\n      return formatters.W(date) + '-я';\n    }\n  };\n  formatters.a = formatters.A;\n  formatters.aa = formatters.A; // Generate ordinal version of formatters: M -> Mo, DDD -> DDDo, etc.\n\n  var ordinalFormatters = ['M', 'DDD', 'd', 'Q'];\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return formatters[formatterToken](date) + '-й';\n    };\n  }); // Generate formatters like 'D MMMM',\n  // where month is in the genitive case: января, февраля, ..., декабря\n\n  var monthsGenitiveFormatters = ['D', 'Do', 'DD'];\n  monthsGenitiveFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + ' MMMM'] = function (date, commonFormatters) {\n      var formatter = formatters[formatterToken] || commonFormatters[formatterToken];\n      return formatter(date, commonFormatters) + ' ' + monthsGenitive[date.getMonth()];\n    };\n  });\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  };\n}\n\nmodule.exports = buildFormatLocale;"],"sourceRoot":""}