{"version":3,"sources":["features/async/asyncActions.jsx","app/common/form/TextInput.jsx","features/user/userActions.jsx","app/common/form/TextArea.jsx","features/auth/authActions.jsx","app/common/form/SelectInput.jsx","app/common/form/DateInput.jsx","app/common/form/PlaceInput.jsx","features/user/Settings/SettingsNav.jsx","app/common/form/RadioInput.jsx","features/user/Settings/BasicPage.jsx","features/user/Settings/AboutPage.jsx","features/user/Settings/PhotosPage.jsx","features/user/Settings/AccountPage.jsx","features/user/Settings/SettingsDashboard.jsx"],"names":["__webpack_require__","d","__webpack_exports__","asyncActionStart","asyncActionFinished","asyncActionError","_asyncConstants__WEBPACK_IMPORTED_MODULE_0__","type","ASYNC_ACTION_START","ASYNC_ACTION_FINISHED","ASYNC_ACTION_ERROR","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","TextInput","_ref","input","width","placeholder","_ref$meta","meta","touched","error","a","createElement","Field","Object","assign","basic","color","updateProfile","user","_ref2","_Users_admin_Dropbox_dev_React_test_full_stack_project_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__","_Users_admin_Dropbox_dev_React_test_full_stack_project_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","mark","_callee","dispatch","getState","getFirebase","firebase","updatedUser","wrap","_context","prev","next","isLoaded","isEmpty","_Users_admin_Dropbox_dev_React_test_full_stack_project_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__","dateOfBirth","profile","moment","toDate","toastr","success","t0","console","log","stop","this","_x","_x2","_x3","apply","arguments","uploadProfileImage","file","fileName","_ref4","_callee2","_ref3","getFirestore","firestore","path","imageName","options","uploadedFile","downloadURL","_context2","auth","currentUser","concat","uid","cuid","name","uploadFile","sent","uploadTaskSnapshot","get","data","photoURL","add","collection","doc","subcollections","url","Error","_x4","_x5","_x6","deletePhoto","photo","_ref6","_callee3","_ref5","_context3","deleteFile","delete","id","_x7","_x8","_x9","setMainPhoto","_ref7","_callee4","today","userDocRef","eventAttendeeRef","batch","eventQuery","eventQuerySanp","i","eventDocRef","_context4","Date","now","update","where","docs","length","eventId","hostUid","_Users_admin_Dropbox_dev_React_test_full_stack_project_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","hostPhotoURL","commit","_x10","_x11","goingToEvent","event","_ref8","_callee6","attendee","eventAttendeeDocRef","_context6","going","joinDate","displayName","host","runTransaction","_ref9","_callee5","transaction","_context5","set","userUid","eventDate","date","_x14","_x12","_x13","cancelGoingToEvent","_ref11","_callee7","_ref10","_context7","FieldValue","_x15","_x16","_x17","getUserEvents","activeTab","_ref12","_callee8","eventsRef","query","querySnap","events","evt","_context8","orderBy","abrupt","push","_Users_admin_Dropbox_dev_React_test_full_stack_project_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","FETCH_EVENT","payload","t1","_x18","_x19","follow","_ref14","_callee9","_ref13","_context9","city","_x20","_x21","_x22","unFollow","_ref16","_callee10","_ref15","_context10","_x23","_x24","_x25","TextArea","rows","login","creds","_Users_admin_Dropbox_dev_React_test_full_stack_project_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_Users_admin_Dropbox_dev_React_test_full_stack_project_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","signInWithEmailAndPassword","email","password","closeModal","SubmissionError","_error","registerUser","createdUser","newUser","createUserWithEmailAndPassword","createdAt","serverTimestamp","socialLogin","selectedProvider","provider","additionalUserInfo","isNewUser","avatarUrl","updatePassword","newPassword1","reset","message","SelectInput","multiple","value","onChange","e","locale","DateInput","_ref$input","onBlur","restInput","_Users_admin_Dropbox_dev_React_test_full_stack_project_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","rest","react__WEBPACK_IMPORTED_MODULE_1___default","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","react_datepicker__WEBPACK_IMPORTED_MODULE_3__","placeholderText","selected","PlaceInput","onSearchChange","defaultValue","noResultsMessage","selection","search","fluid","param","SettingsNav","react_default","dist_es","Column","vertical","icon","attached","inverted","content","Item","as","NavLink","to","Row","RadioInput","label","className","BasicsPage","state","resultCity","text","_this","props","initialValues","key","handlerGetCity","axios","target","then","response","GeoObjectCollection","featureMember","forEach","item","index","GeoObject","metaDataProperty","GeocoderMetaData","setState","_this$props","pristine","submitting","handleSubmit","dividing","size","onSubmit","component","Group","inline","dateFormat","showYearDropdown","showMonthDropdown","dropdownMode","maxDate","subtract","disabled","positive","Component","reduxForm","form","enableReinitialize","destroyOnUnmount","interests","actions","PhotosPage","files","cropResult","image","uploadImage","regenerator_default","cancelCrop","handlePhotoDelete","asyncToGenerator","handeSetMainPhoto","cropImage","refs","cropper","getCroppedCanvas","toBlob","blob","imageUrl","URL","createObjectURL","onDrop","filterPhotos","_this2","photos","loading","filter","sub","react_dropzone_dist_es","style","padding","textAlign","react_cropper_default","height","ref","src","preview","aspectRatio","dragMode","guides","scalable","cropBoxMovable","cropBoxResizable","crop","minHeight","minWidth","onClick","negative","itemsPerRow","map","compose","connect","ordered","async","firestoreConnect","storeAs","validate","combineValidators","isRequired","newPassword2","composeValidators","matchesField","invalid","providerId","pointing","providerData","Switch","Redirect","exact","from","Route","render","BasicPage","Settings_AboutPage","Settings_AccountPage","Settings_SettingsNav"],"mappings":"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","file":"static/js/9.ae454cc4.chunk.js","sourcesContent":["import {\n  ASYNC_ACTION_ERROR,\n  ASYNC_ACTION_FINISHED,\n  ASYNC_ACTION_START\n} from \"./asyncConstants\";\n\nexport const asyncActionStart = () => {\n  return {\n    type: ASYNC_ACTION_START\n  };\n};\n\nexport const asyncActionFinished = () => {\n  return {\n    type: ASYNC_ACTION_FINISHED\n  };\n};\n\nexport const asyncActionError = () => {\n  return {\n    type: ASYNC_ACTION_ERROR\n  };\n};\n","import React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\n\nconst TextInput = ({\n  input,\n  width,\n  type,\n  placeholder,\n  meta: { touched, error }\n}) => {\n  return (\n    <Form.Field error={touched && !!error} width={width}>\n      <input {...input} placeholder={placeholder} type={type} />\n      {touched && error && (\n        <Label basic color=\"red\">\n          {error}\n        </Label>\n      )}\n    </Form.Field>\n  );\n};\n\nexport default TextInput;\n","import moment from \"moment\";\nimport cuid from \"cuid\";\nimport { toastr } from \"react-redux-toastr\";\nimport { FETCH_EVENT } from \"../event/eventConstants\";\nimport {\n  asyncActionStart,\n  asyncActionFinished,\n  asyncActionError\n} from \"../async/asyncActions\";\nimport firebase from \"../../app/config/firebase\";\n\nexport const updateProfile = user => async (\n  dispatch,\n  getState,\n  { getFirebase }\n) => {\n  const firebase = getFirebase();\n  const { isLoaded, isEmpty, ...updatedUser } = user;\n  if (updatedUser.dateOfBirth !== getState().firebase.profile.dateOfBirth) {\n    updatedUser.dateOfBirth = moment(updatedUser.dateOfBirth).toDate();\n  }\n\n  try {\n    await firebase.updateProfile(updatedUser);\n    toastr.success(\"Ура 🎉\", \"Профиль был изменен 👍\");\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const uploadProfileImage = (file, fileName) => async (\n  dispatch,\n  getState,\n  { getFirebase, getFirestore }\n) => {\n  const firebase = getFirebase();\n  const firestore = getFirestore();\n  const user = firebase.auth().currentUser;\n  const path = `${user.uid}/user_image`;\n  const imageName = cuid();\n  const options = {\n    name: imageName\n  };\n\n  try {\n    dispatch(asyncActionStart());\n    // Загрузить файл в firebase storage\n    let uploadedFile = await firebase.uploadFile(path, file, null, options);\n    // Получить URL картинки\n    let downloadURL = await uploadedFile.uploadTaskSnapshot.downloadURL;\n    // Получить userdoc\n    let userDoc = await firestore.get(`users/${user.uid}`);\n    // Проверить есть ли у пользователя фото если нет загрузить\n    if (!userDoc.data().photoURL) {\n      await firebase.updateProfile({\n        photoURL: downloadURL\n      });\n      await user.updateProfile({\n        photoURL: downloadURL\n      });\n    }\n    // Добавить новое фото в коллекцию\n    await firestore.add(\n      {\n        collection: \"users\",\n        doc: user.uid,\n        subcollections: [{ collection: \"photos\" }]\n      },\n      {\n        name: imageName,\n        url: downloadURL\n      }\n    );\n    dispatch(asyncActionFinished());\n  } catch (error) {\n    console.log(error);\n    dispatch(asyncActionError());\n    throw new Error(\"Houston, we have a problem with upload\");\n  }\n};\n\nexport const deletePhoto = photo => async (\n  dispatch,\n  getState,\n  { getFirebase, getFirestore }\n) => {\n  const firebase = getFirebase();\n  const firestore = getFirestore();\n  const user = firebase.auth().currentUser;\n\n  try {\n    await firebase.deleteFile(`${user.uid}/user_image/${photo.name}`);\n    await firestore.delete({\n      collection: \"users\",\n      doc: user.uid,\n      subcollections: [{ collection: \"photos\", doc: photo.id }]\n    });\n  } catch (error) {\n    console.log(error);\n    throw new Error(\"Houston, we have a problem with delete\");\n  }\n};\n\nexport const setMainPhoto = photo => async (dispatch, getState) => {\n  dispatch(asyncActionStart());\n  const firestore = firebase.firestore();\n  const user = firebase.auth().currentUser;\n  const today = new Date(Date.now());\n  let userDocRef = firestore.collection(\"users\").doc(user.uid);\n  let eventAttendeeRef = firestore.collection(\"event_attendee\");\n  try {\n    let batch = firestore.batch();\n\n    await batch.update(userDocRef, {\n      photoURL: photo.url\n    });\n    let eventQuery = await eventAttendeeRef\n      .where(\"userUid\", \"==\", user.uid)\n      .where(\"eventDate\", \">\", today);\n\n    let eventQuerySanp = await eventQuery.get();\n\n    for (let i = 0; i < eventQuerySanp.docs.length; i++) {\n      let eventDocRef = await firestore\n        .collection(\"events\")\n        .doc(eventQuerySanp.docs[i].data().eventId);\n      let event = await eventDocRef.get();\n      if (event.data().hostUid === user.uid) {\n        batch.update(eventDocRef, {\n          hostPhotoURL: photo.url,\n          [`attendees.${user.uid}.photoURL`]: photo.url\n        });\n      } else {\n        batch.update(eventDocRef, {\n          [`attendees.${user.uid}.photoURL`]: photo.url\n        });\n      }\n    }\n    console.log(batch);\n    await batch.commit();\n    dispatch(asyncActionFinished());\n  } catch (error) {\n    console.log(error);\n    dispatch(asyncActionError());\n    throw new Error(\"Houston, we have a problem set photo\");\n  }\n};\n\nexport const goingToEvent = event => async (dispatch, getState) => {\n  dispatch(asyncActionStart());\n  const firestore = firebase.firestore();\n  const user = firebase.auth().currentUser;\n  const profile = getState().firebase.profile;\n  const attendee = {\n    going: true,\n    joinDate: Date.now(),\n    photoURL: profile.photoURL || \"/assets/user.png\",\n    displayName: profile.displayName,\n    host: false\n  };\n  try {\n    let eventDocRef = firestore.collection(\"events\").doc(event.id);\n    let eventAttendeeDocRef = firestore\n      .collection(\"event_attendee\")\n      .doc(`${event.id}_${user.uid}`);\n\n    await firestore.runTransaction(async transaction => {\n      await transaction.get(eventDocRef);\n      await transaction.update(eventDocRef, {\n        [`attendees.${user.uid}`]: attendee\n      });\n      await transaction.set(eventAttendeeDocRef, {\n        eventId: event.id,\n        userUid: user.uid,\n        eventDate: event.date,\n        host: false\n      });\n    });\n    dispatch(asyncActionFinished());\n    toastr.success(\"Ура 🎉\", \"Вы подписались на событие\");\n  } catch (error) {\n    console.log(error);\n    dispatch(asyncActionError());\n    toastr.error(\"Упс...\", \"У нас проблемы с присоединением\");\n  }\n};\n\nexport const cancelGoingToEvent = event => async (\n  dispatch,\n  getState,\n  { getFirestore }\n) => {\n  const firestore = getFirestore();\n  const user = firestore.auth().currentUser;\n  try {\n    await firestore.update(`events/${event.id}`, {\n      [`attendees.${user.uid}`]: firestore.FieldValue.delete()\n    });\n    await firestore.delete(`event_attendee/${event.id}_${user.uid}`);\n    toastr.success(\"Ура 🎉\", \"Вы отписались от события\");\n  } catch (error) {\n    console.log(error);\n    toastr.error(\"Упс...\", \"У нас проблемы с отпиской\");\n  }\n};\n\nexport const getUserEvents = (userUid, activeTab) => async (\n  dispatch,\n  getState\n) => {\n  dispatch(asyncActionStart());\n  const firestore = firebase.firestore();\n  const today = new Date(Date.now());\n  let eventsRef = firestore.collection(\"event_attendee\");\n  let query;\n  switch (activeTab) {\n    case 1: // Прошлые события\n      query = eventsRef\n        .where(\"userUid\", \"==\", userUid)\n        .where(\"eventDate\", \"<=\", today)\n        .orderBy(\"eventDate\", \"desc\");\n      break;\n    case 2: // Будущие события\n      query = eventsRef\n        .where(\"userUid\", \"==\", userUid)\n        .where(\"eventDate\", \">=\", today)\n        .orderBy(\"eventDate\");\n      break;\n    case 3: // Организатор событий\n      query = eventsRef\n        .where(\"userUid\", \"==\", userUid)\n        .where(\"host\", \"==\", true)\n        .orderBy(\"eventDate\", \"desc\");\n      break;\n    default:\n      query = eventsRef\n        .where(\"userUid\", \"==\", userUid)\n        .orderBy(\"eventDate\", \"desc\");\n  }\n  try {\n    let querySnap = await query.get();\n    let events = [];\n\n    for (let i = 0; i < querySnap.docs.length; i++) {\n      let evt = await firestore\n        .collection(\"events\")\n        .doc(querySnap.docs[i].data().eventId)\n        .get();\n      events.push({ ...evt.data(), id: evt.id });\n    }\n\n    dispatch({ type: FETCH_EVENT, payload: { events } });\n\n    dispatch(asyncActionFinished());\n  } catch (error) {\n    console.log(error);\n    dispatch(asyncActionError());\n  }\n};\n\n// Пользователь подписываеться на людей\nexport const follow = profile => async (\n  dispatch,\n  getState,\n  { getFirestore }\n) => {\n  const firestore = getFirestore();\n  const user = firestore.auth().currentUser;\n  try {\n    await firestore.set(\n      {\n        collection: \"users\",\n        doc: user.uid,\n        subcollections: [{ collection: `following`, doc: profile.id }]\n      },\n      {\n        city: profile.city || \"Без определённого места жительства\",\n        displayName: profile.displayName,\n        photoURL: profile.photoURL || \"/assets/user.png\"\n      }\n    );\n  } catch (error) {\n    console.log(error);\n    dispatch(asyncActionError());\n    throw new Error(\"Houston, we have a problem with upload\");\n  }\n};\n\n// Пользователь отписывается от людей\nexport const unFollow = profile => async (\n  dispatch,\n  getState,\n  { getFirestore }\n) => {\n  const firestore = getFirestore();\n  const user = firestore.auth().currentUser;\n  try {\n    await firestore.delete({\n      collection: \"users\",\n      doc: user.uid,\n      subcollections: [{ collection: `following`, doc: profile.id }]\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch(asyncActionError());\n    throw new Error(\"Houston, we have a problem with upload\");\n  }\n};\n","import React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\n\nconst TextArea = ({\n  input,\n  rows,\n  type,\n  placeholder,\n  meta: { touched, error }\n}) => {\n  return (\n    <Form.Field error={touched && !!error}>\n      <textarea {...input} placeholder={placeholder} rows={rows} />\n      {touched && error && (\n        <Label basic color=\"red\">\n          {error}\n        </Label>\n      )}\n    </Form.Field>\n  );\n};\n\nexport default TextArea;\n","import { SubmissionError, reset } from \"redux-form\";\nimport { closeModal } from \"../modals/modalActions\";\nimport { toastr } from \"react-redux-toastr\";\n\nexport const login = creds => {\n  return async (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    try {\n      await firebase\n        .auth()\n        .signInWithEmailAndPassword(creds.email, creds.password);\n      dispatch(closeModal());\n    } catch (error) {\n      console.log(error);\n      throw new SubmissionError({\n        _error: \"Ошибка авторизации! 🔥🔥🔥\"\n      });\n    }\n  };\n};\n\nexport const registerUser = user => async (\n  dispatch,\n  getState,\n  { getFirebase, getFirestore }\n) => {\n  const firebase = getFirebase();\n  const firestore = getFirestore();\n  try {\n    // Создание пользователя в auth\n    let createdUser = await firebase\n      .auth()\n      .createUserWithEmailAndPassword(user.email, user.password);\n    // Обновлений auth профиля\n    await createdUser.updateProfile({\n      displayName: user.displayName\n    });\n    // создание нового профиля в firesotre\n    let newUser = {\n      displayName: user.displayName,\n      createdAt: firestore.FieldValue.serverTimestamp()\n    };\n    await firestore.set(`users/${createdUser.uid}`, { ...newUser });\n    dispatch(closeModal());\n  } catch (error) {\n    throw new SubmissionError({\n      _error: \"Ошибка регистрации 🔥🔥🔥\"\n    });\n  }\n};\n\nexport const socialLogin = selectedProvider => async (\n  dispatch,\n  getState,\n  { getFirebase, getFirestore }\n) => {\n  const firebase = getFirebase();\n  const firestore = getFirestore();\n  try {\n    dispatch(closeModal());\n    let user = await firebase.login({\n      provider: selectedProvider,\n      type: \"popup\"\n    });\n    if (user.additionalUserInfo.isNewUser) {\n      await firestore.set(`users/${user.user.uid}`, {\n        displayName: user.profile.displayName,\n        photoURL: user.profile.avatarUrl,\n        createdAt: firestore.FieldValue.serverTimestamp()\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updatePassword = creds => async (\n  dispatch,\n  getState,\n  { getFirebase }\n) => {\n  const firebase = getFirebase();\n  const user = firebase.auth().currentUser;\n  try {\n    await user.updatePassword(creds.newPassword1);\n    await dispatch(reset(\"account\"));\n    toastr.success(\"Успех!\", \"Пароль был изменен 👍\");\n  } catch (error) {\n    throw new SubmissionError({\n      _error: error.message\n    });\n  }\n};\n\n","import React from \"react\";\nimport { Form, Label, Select } from \"semantic-ui-react\";\n\nconst SelectInput = ({\n  input,\n  type,\n  placeholder,\n  multiple,\n  options,\n  meta: { touched, error }\n}) => {\n  return (\n    <Form.Field error={touched && !!error}>\n      <Select\n        value={input.value || null}\n        onChange={(e, data) => input.onChange(data.value)}\n        placeholder={placeholder}\n        options={options}\n        multiple={multiple}\n      />\n      {touched && error && (\n        <Label basic color=\"red\">\n          {error}\n        </Label>\n      )}\n    </Form.Field>\n  );\n};\n\nexport default SelectInput;\n","import React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from \"moment\";\nimport \"moment/locale/ru\"; // without this line it didn't work\nmoment.locale(\"ru\");\n\nconst DateInput = ({\n  input: { value, onChange, onBlur, ...restInput },\n  width,\n  placeholder,\n  meta: { touched, error },\n  ...rest\n}) => {\n  if (value) {\n    value = moment(value, 'X');\n  }\n  return (\n    <Form.Field error={touched && !!error} width={width}>\n      <DatePicker\n        {...rest}\n        placeholderText={placeholder}\n        selected={value ? moment(value) : null}\n        onChange={onChange}\n        onBlur={() => onBlur()}\n        {...restInput}\n      />\n      {touched && error && (\n        <Label basic color=\"red\">\n          {error}\n        </Label>\n      )}\n    </Form.Field>\n  );\n};\n\nexport default DateInput;\n","import React from \"react\";\nimport { Form, Label, Dropdown } from \"semantic-ui-react\";\n\nconst PlaceInput = ({\n  onSearchChange,\n  input: { onChange },\n  options,\n  defaultValue,\n  placeholder,\n  noResultsMessage,\n  meta: { touched, error }\n}) => {\n  return (\n    <Form.Field error={touched && !!error}>\n      <Dropdown\n        selection\n        search\n        fluid\n        onSearchChange={onSearchChange}\n        onChange={(param, data) => onChange(data.value )}\n        defaultValue={defaultValue}\n        noResultsMessage={noResultsMessage}\n        placeholder={placeholder}\n        options={options}\n      />\n\n      {touched && error && (\n        <Label basic color=\"red\">\n          {error}\n        </Label>\n      )}\n    </Form.Field>\n  );\n};\n\nexport default PlaceInput;\n","import React from \"react\";\nimport { Grid, Menu, Header } from \"semantic-ui-react\";\nimport { NavLink } from 'react-router-dom'\n\nconst SettingsNav = () => {\n  return (\n    <div>\n      <Grid.Column width={4}>\n        <Menu vertical>\n          <Header\n            icon=\"user\"\n            attached\n            inverted\n            color=\"grey\"\n            content=\"Профиль\"\n          />\n          <Menu.Item as={NavLink} to='/settings/basic'>Основное</Menu.Item>\n          <Menu.Item as={NavLink} to='/settings/about'>Обо Мне</Menu.Item>\n          <Menu.Item as={NavLink} to='/settings/photos'>Мои Фото</Menu.Item>\n        </Menu>\n        <Grid.Row />\n        <Menu vertical>\n          <Header\n            icon=\"settings\"\n            attached\n            inverted\n            color=\"grey\"\n            content=\"Учётная Запись\"\n          />\n          <Menu.Item as={NavLink} to='/settings/account'>Аккаунт</Menu.Item>\n        </Menu>\n      </Grid.Column>\n    </div>\n  );\n};\n\nexport default SettingsNav;\n","import React from \"react\";\nimport { Form } from \"semantic-ui-react\";\n\nconst RadioInput = ({ input, width, type, label }) => {\n  return (\n    <Form.Field>\n      <div className=\"ui radio\">\n        <input {...input} type={type} />\n        <label>{label}</label>\n      </div>\n    </Form.Field>\n  );\n};\n\nexport default RadioInput;\n","import React, { Component } from \"react\";\nimport { Segment, Form, Header, Divider, Button } from \"semantic-ui-react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport DateInput from \"../../../app/common/form/DateInput\";\nimport PlaceInput from \"../../../app/common/form/PlaceInput\";\nimport TextInput from \"../../../app/common/form/TextInput\";\nimport RadioInput from \"../../../app/common/form/RadioInput\";\n\nclass BasicsPage extends Component {\n  state = {\n    resultCity: [\n      {\n        text: this.props.initialValues.city || \"Введите город 🏙\",\n        value: this.props.initialValues.city || \"\",\n        key: \"c\"\n      }\n    ],\n    city: {}\n  };\n\n  handlerGetCity = e => {\n    axios\n      .get(\n        `https://geocode-maps.yandex.ru/1.x/?format=json&geocode=${\n          e.target.value\n        }`\n      )\n      .then(response => {\n        let data = [];\n        response.data.response.GeoObjectCollection.featureMember.forEach(\n          (item, index) => {\n            data.push({\n              text: item.GeoObject.metaDataProperty.GeocoderMetaData.text,\n              value: item.GeoObject.metaDataProperty.GeocoderMetaData.text,\n              key: index\n            });\n          }\n        );\n        this.setState({\n          resultCity: data\n        });\n      });\n  };\n\n  // SelectCity = e => {\n  //   let data = Object.values(e)\n  //     .slice(0, -1)\n  //     .join(\"\");\n  //   this.setState({\n  //     city: data\n  //   });\n  //   this.props.change(\"city\", data);\n  // };\n\n  render() {\n    const { pristine, submitting, handleSubmit, updateProfile } = this.props;\n    return (\n      <Segment>\n        <Header dividing size=\"large\" content=\"Основное\" />\n        <Form onSubmit={handleSubmit(updateProfile)}>\n          <Field\n            width={8}\n            name=\"displayName\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Имя\"\n          />\n          <Form.Group inline>\n            <label>Пол: </label>\n            <Field\n              name=\"gender\"\n              type=\"radio\"\n              value=\"Мужчина\"\n              label=\" Мужчина\"\n              component={RadioInput}\n            />\n            <Field\n              name=\"gender\"\n              type=\"radio\"\n              value=\"Женщина\"\n              label=\" Женщина\"\n              component={RadioInput}\n            />\n          </Form.Group>\n          <Field\n            width={8}\n            name=\"dateOfBirth\"\n            component={DateInput}\n            placeholder=\"Дата рождения\"\n            dateFormat=\"YYYY-MM-DD\"\n            showYearDropdown={true}\n            showMonthDropdown={true}\n            dropdownMode=\"select\"\n            maxDate={moment().subtract(18, \"years\")}\n          />\n          <Field\n            name=\"city\"\n            type=\"text\"\n            component={PlaceInput}\n            placeholder=\"Город\"\n            options={this.state.resultCity}\n            defaultValue={this.props.initialValues.city}\n            noResultsMessage=\"Ничего не найдено 😌\"\n            onSearchChange={this.handlerGetCity}\n            // onChange={this.SelectCity}\n            width={8}\n          />\n          <Divider />\n          <Button\n            disabled={pristine || submitting}\n            size=\"large\"\n            positive\n            content=\"Обновить профиль\"\n          />\n        </Form>\n      </Segment>\n    );\n  }\n}\n\nexport default reduxForm({\n  form: \"userProfile\",\n  enableReinitialize: true,\n  destroyOnUnmount: false\n})(BasicsPage);\n","import React from \"react\";\nimport { Button, Divider, Form, Header, Segment } from \"semantic-ui-react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport RadioInput from \"../../../app/common/form/RadioInput\";\nimport TextInput from \"../../../app/common/form/TextInput\";\nimport TextArea from \"../../../app/common/form/TextArea\";\n// import PlaceInput from \"../../../app/common/form/PlaceInput\";\nimport SelectInput from \"../../../app/common/form/SelectInput\";\n// import axios from 'axios'\n\nconst interests = [\n  { key: \"drinks\", text: \"Напитки\", value: \"Напитки\" },\n  { key: \"culture\", text: \"Культура\", value: \"Культура\" },\n  { key: \"film\", text: \"Фильмы\", value: \"Фильмы\" },\n  { key: \"food\", text: \"Еда\", value: \"Еда\" },\n  { key: \"music\", text: \"Музыка\", value: \"Музыка\" },\n  { key: \"travel\", text: \"Путишествие\", value: \"Путишествие\" }\n];\n\n// const resultCity = [\n//     {\n//       text:  state.firebase.city || \"Введите город 🏙\",\n//       value: this.initialValues.city || \"\",\n//       key: \"c\"\n//     }\n//   ]\n\n// const handlerGetCity = e => {\n//   axios\n//     .get(\n//       `https://geocode-maps.yandex.ru/1.x/?format=json&geocode=${\n//         e.target.value\n//       }`\n//     )\n//     .then(response => {\n//       let data = [];\n//       response.data.response.GeoObjectCollection.featureMember.forEach(\n//         (item, index) => {\n//           data.push({\n//             text: item.GeoObject.metaDataProperty.GeocoderMetaData.text,\n//             value: item.GeoObject.metaDataProperty.GeocoderMetaData.text,\n//             key: index\n//           });\n//         }\n//       );\n//       this.setState({\n//         resultCity: data\n//       });\n//     });\n// };\n\nconst AboutPage = ({ pristine, submitting, handleSubmit, updateProfile }) => {\n  return (\n    <Segment>\n      <Header dividing size=\"large\" content=\"Обо мне\" />\n      <p>\n        Заполните свой профиль, чтобы получить максимальную отдачу от этого\n        сайта\n      </p>\n      <Form onSubmit={handleSubmit(updateProfile)}>\n        <Form.Group inline>\n          <label>Семейное положение: </label>\n          <Field\n            name=\"status\"\n            component={RadioInput}\n            type=\"radio\"\n            value=\"В активном поиске\"\n            label=\"  В активном поиске\"\n          />\n          <Field\n            name=\"status\"\n            component={RadioInput}\n            type=\"radio\"\n            value=\"Встречаюсь\"\n            label=\"  Встречаюсь\"\n          />\n          <Field\n            name=\"status\"\n            component={RadioInput}\n            type=\"radio\"\n            value=\"Подарил кольцо\"\n            label=\"  Подарил кольцо\"\n          />\n        </Form.Group>\n        <Divider />\n        <label>Расскажите нам о себе</label>\n        <Field name=\"about\" component={TextArea} placeholder=\"Обо мне\" />\n        <Field\n          name=\"interests\"\n          component={SelectInput}\n          options={interests}\n          value=\"interests\"\n          multiple={true}\n          placeholder=\"Выберите ваши интересы\"\n        />\n        <Field\n          width={8}\n          name=\"occupation\"\n          type=\"text\"\n          component={TextInput}\n          placeholder=\"Род занятий\"\n        />\n        {/* <Field\n          name=\"origin\"\n          type=\"text\"\n          component={PlaceInput}\n          placeholder=\"Родной город\"\n          options={resultCity}\n          // defaultValue={this.props.initialValues.city}\n          noResultsMessage=\"Ничего не найдено 😌\"\n          onSearchChange={handlerGetCity}\n          onChange={this.SelectCity}\n          width={8}\n        /> */}\n        <Divider />\n        <Button\n          disabled={pristine || submitting}\n          size=\"large\"\n          positive\n          content=\"Обновить профиль\"\n        />\n      </Form>\n    </Segment>\n  );\n};\n\nexport default reduxForm({\n  form: \"userProfile\",\n  enableReinitialize: true,\n  destroyOnUnmount: false\n})(AboutPage);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport {\n  Image,\n  Segment,\n  Header,\n  Divider,\n  Grid,\n  Button,\n  Card,\n  Icon\n} from \"semantic-ui-react\";\nimport { toastr } from \"react-redux-toastr\";\nimport Dropzone from \"react-dropzone\";\nimport Cropper from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\";\nimport { uploadProfileImage, deletePhoto, setMainPhoto } from \"../userActions\";\n\nconst query = ({ auth }) => {\n  return [\n    {\n      collection: \"users\",\n      doc: auth.uid,\n      subcollections: [{ collection: \"photos\" }],\n      storeAs: \"photos\"\n    }\n  ];\n};\n\nconst actions = {\n  uploadProfileImage,\n  deletePhoto,\n  setMainPhoto\n};\n\nconst mapState = state => ({\n  auth: state.firebase.auth,\n  profile: state.firebase.profile,\n  photos: state.firestore.ordered.photos,\n  loading: state.async.loading\n});\n\nclass PhotosPage extends Component {\n  state = {\n    files: [],\n    fileName: \"\",\n    cropResult: null,\n    image: {}\n  };\n\n  uploadImage = async () => {\n    try {\n      await this.props.uploadProfileImage(\n        this.state.image,\n        this.state.fileName\n      );\n      this.cancelCrop();\n      toastr.success(\"Успех!\", \"Фото было обновленно👍\");\n    } catch (error) {\n      toastr.error(\"Упс...\", error.message);\n    }\n  };\n\n  handlePhotoDelete = photo => async () => {\n    try {\n      this.props.deletePhoto(photo);\n    } catch (error) {\n      toastr.error(\"Упс...\", error.message);\n    }\n  };\n\n  handeSetMainPhoto = photo => async () => {\n    try {\n      await this.props.setMainPhoto(photo);\n    } catch (error) {\n      toastr.error(\"Упс...\", error.message);\n    }\n  };\n\n  cancelCrop = () => {\n    this.setState({\n      files: [],\n      image: {}\n    });\n  };\n\n  cropImage = () => {\n    if (typeof this.refs.cropper.getCroppedCanvas() === \"undefined\") {\n      return;\n    }\n\n    this.refs.cropper.getCroppedCanvas().toBlob(blob => {\n      let imageUrl = URL.createObjectURL(blob);\n      this.setState({\n        cropResult: imageUrl,\n        image: blob\n      });\n    }, \"image/jpeg\");\n  };\n\n  onDrop = files => {\n    this.setState({\n      files,\n      fileName: files[0].name\n    });\n  };\n\n  render() {\n    const { photos, profile, loading } = this.props;\n    let filterPhotos;\n    if (photos) {\n      filterPhotos = photos.filter(photo => {\n        return photo.url !== profile.photoURL;\n      });\n    }\n\n    return (\n      <Segment>\n        <Header dividing size=\"large\" content=\"Мои фото\" />\n        <Grid>\n          <Grid.Row />\n          <Grid.Column width={4}>\n            <Header color=\"teal\" sub content=\"Шаг 1 - Добавить фото\" />\n            <Dropzone onDrop={this.onDrop} multiple={false}>\n              <div style={{ padding: \"15px\", textAlign: \"center\" }}>\n                <Icon name=\"upload\" size=\"huge\" />\n                <Header content=\"Перетащите фото сюда или нажмите добавить.\" />\n              </div>\n            </Dropzone>\n          </Grid.Column>\n          <Grid.Column width={1} />\n          <Grid.Column width={4}>\n            <Header\n              sub\n              color=\"teal\"\n              content=\"Шаг 2 - Изменить размер изображения\"\n            />\n            {this.state.files[0] && (\n              <Cropper\n                style={{ height: 200, width: \"100%\" }}\n                ref=\"cropper\"\n                src={this.state.files[0].preview}\n                aspectRatio={1}\n                dragMode=\"move\"\n                guides={false}\n                scalable={true}\n                cropBoxMovable={true}\n                cropBoxResizable={true}\n                crop={this.cropImage}\n              />\n            )}\n          </Grid.Column>\n          <Grid.Column width={1} />\n          <Grid.Column width={4}>\n            <Header sub color=\"teal\" content=\"Шаг 3 - Просмотр и загрузка\" />\n            {this.state.files[0] && (\n              <div>\n                <Image\n                  style={{ minHeight: \"200px\", minWidth: \"200px\" }}\n                  src={this.state.cropResult}\n                />\n                <Button.Group>\n                  <Button\n                    loading={loading}\n                    onClick={this.uploadImage}\n                    style={{ width: \"109px\" }}\n                    positive\n                    icon=\"check\"\n                  />\n                  <Button\n                    disabled={loading}\n                    onClick={this.cancelCrop}\n                    style={{ width: \"109px\" }}\n                    negative\n                    icon=\"close\"\n                  />\n                </Button.Group>\n              </div>\n            )}\n          </Grid.Column>\n        </Grid>\n\n        <Divider />\n        <Header sub color=\"teal\" content=\"Все фото\" />\n\n        <Card.Group itemsPerRow={5}>\n          <Card>\n            <Image src={profile.photoURL || \"/assets/user.png\"} />\n            <Button positive>Основное фото</Button>\n          </Card>\n          {photos &&\n            filterPhotos.map(photo => (\n              <Card key={photo.id}>\n                <Image src={photo.url} />\n                <div className=\"ui two buttons\">\n                  <Button\n                    loading={loading}\n                    onClick={this.handeSetMainPhoto(photo)}\n                    basic\n                    color=\"green\"\n                  >\n                    Выбрать\n                  </Button>\n                  <Button\n                    onClick={this.handlePhotoDelete(photo)}\n                    basic\n                    icon=\"trash\"\n                    color=\"red\"\n                  />\n                </div>\n              </Card>\n            ))}\n        </Card.Group>\n      </Segment>\n    );\n  }\n}\n\nexport default compose(\n  connect(\n    mapState,\n    actions\n  ),\n  firestoreConnect(auth => query(auth))\n)(PhotosPage);\n","import React from \"react\";\nimport {\n  Segment,\n  Header,\n  Form,\n  Divider,\n  Label,\n  Button,\n  Icon\n} from \"semantic-ui-react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  combineValidators,\n  matchesField,\n  isRequired,\n  composeValidators\n} from \"revalidate\";\nimport TextInput from \"../../../app/common/form/TextInput\";\n\nconst validate = combineValidators({\n  newPassword1: isRequired({ message: \"Пожалуйста, введите пароль\" }),\n  newPassword2: composeValidators(\n    isRequired({ message: \"Пожалуйста, подтвердите пароль\" }),\n    matchesField(\"newPassword1\")({ message: \"Пароли не совподают\" })\n  )()\n});\n\nconst AccountPage = ({\n  error,\n  invalid,\n  submitting,\n  handleSubmit,\n  updatePassword,\n  providerId\n}) => {\n  return (\n    <Segment>\n      <Header dividing size=\"large\" content=\"Учётная Запись\" />\n      {providerId && providerId === \"password\" && (\n        <div>\n          <Header color=\"teal\" sub content=\"ИЗМЕНИТЬ ПАРОЛЬ\" />\n          <p>\n            Используйте эту форму для обновления настроек вашей учетной записи\n          </p>\n          <Form onSubmit={handleSubmit(updatePassword)}>\n            <Field\n              width={8}\n              name=\"newPassword1\"\n              type=\"password\"\n              pointing=\"left\"\n              inline={true}\n              component={TextInput}\n              basic={true}\n              placeholder=\"Новый пароль\"\n            />\n            <Field\n              width={8}\n              name=\"newPassword2\"\n              type=\"password\"\n              inline={true}\n              basic={true}\n              pointing=\"left\"\n              component={TextInput}\n              placeholder=\"Подтвердите пароль\"\n            />\n            {error && (\n              <Label basic color=\"red\">\n                {error}\n              </Label>\n            )}\n            <Divider />\n            <Button\n              disabled={invalid || submitting}\n              size=\"large\"\n              positive\n              content=\"Обновить пароль\"\n            />\n          </Form>\n        </div>\n      )}\n\n      {providerId && providerId === \"facebook.com\" && (\n        <div>\n          <Header color=\"teal\" sub content=\"Facebook Account\" />\n          <p>\n            Пожалуйста, посетите Facebook, чтобы обновить настройки вашей\n            учетной записи\n          </p>\n          <Button type=\"button\" color=\"facebook\">\n            <Icon name=\"facebook\" />В Facebook 🚀\n          </Button>\n        </div>\n      )}\n\n      {providerId && providerId === \"google.com\" && (\n        <div>\n          <Header color=\"teal\" sub content=\"Google Account\" />\n          <p>\n            Пожалуйста, посетите Google, чтобы обновить настройки вашего\n            аккаунта\n          </p>\n          <Button type=\"button\" color=\"google plus\">\n            <Icon name=\"google plus\" />В Google 🚀\n          </Button>\n        </div>\n      )}\n    </Segment>\n  );\n};\n\nexport default reduxForm({ form: \"account\", validate })(AccountPage);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid } from \"semantic-ui-react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport SettingsNav from \"./SettingsNav\";\nimport BasicPage from \"./BasicPage\";\nimport AboutPage from \"./AboutPage\";\nimport PhotosPage from \"./PhotosPage\";\nimport AccountPage from \"./AccountPage\";\nimport { updatePassword } from \"../../auth/authActions\";\nimport { updateProfile } from \"../userActions\";\n\nconst actions = {\n  updatePassword,\n  updateProfile\n};\n\nconst mapState = state => ({\n  providerId: state.firebase.auth.providerData[0].providerId,\n  user: state.firebase.profile\n});\n\nconst SettingsDashboard = ({\n  updatePassword,\n  providerId,\n  user,\n  updateProfile\n}) => {\n  return (\n    <Grid>\n      <Grid.Column width={14}>\n        <Switch>\n          <Redirect exact from=\"/settings\" to=\"/settings/basic/\" />\n          <Route\n            path=\"/settings/basic\"\n            render={() => (\n              <BasicPage updateProfile={updateProfile} initialValues={user} />\n            )}\n          />\n          <Route\n            path=\"/settings/about\"\n            render={() => (\n              <AboutPage updateProfile={updateProfile} initialValues={user} />\n            )}\n          />\n          <Route path=\"/settings/photos\" component={PhotosPage} />\n          <Route\n            path=\"/settings/account\"\n            render={() => (\n              <AccountPage\n                updatePassword={updatePassword}\n                providerId={providerId}\n              />\n            )}\n          />\n        </Switch>\n      </Grid.Column>\n      <Grid.Column width={2}>\n        <SettingsNav />\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default connect(\n  mapState,\n  actions\n)(SettingsDashboard);\n"],"sourceRoot":""}